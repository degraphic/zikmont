<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class zikmontFrontEndBundleEntityDocumentosProxy extends \zikmont\FrontEndBundle\Entity\Documentos implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getCodigoDocumentoPk()
    {
        $this->__load();
        return parent::getCodigoDocumentoPk();
    }

    public function setNombreDocumento($nombreDocumento)
    {
        $this->__load();
        return parent::setNombreDocumento($nombreDocumento);
    }

    public function getNombreDocumento()
    {
        $this->__load();
        return parent::getNombreDocumento();
    }

    public function setAbreviatura($abreviatura)
    {
        $this->__load();
        return parent::setAbreviatura($abreviatura);
    }

    public function getAbreviatura()
    {
        $this->__load();
        return parent::getAbreviatura();
    }

    public function setCodigoDocumentoTipoFk($codigoDocumentoTipoFk)
    {
        $this->__load();
        return parent::setCodigoDocumentoTipoFk($codigoDocumentoTipoFk);
    }

    public function getCodigoDocumentoTipoFk()
    {
        $this->__load();
        return parent::getCodigoDocumentoTipoFk();
    }

    public function setCodigoComprobanteFk($codigoComprobanteFk)
    {
        $this->__load();
        return parent::setCodigoComprobanteFk($codigoComprobanteFk);
    }

    public function getCodigoComprobanteFk()
    {
        $this->__load();
        return parent::getCodigoComprobanteFk();
    }

    public function setColumnaLote($columnaLote)
    {
        $this->__load();
        return parent::setColumnaLote($columnaLote);
    }

    public function getColumnaLote()
    {
        $this->__load();
        return parent::getColumnaLote();
    }

    public function setColumnaBodega($columnaBodega)
    {
        $this->__load();
        return parent::setColumnaBodega($columnaBodega);
    }

    public function getColumnaBodega()
    {
        $this->__load();
        return parent::getColumnaBodega();
    }

    public function setOperacionInventario($operacionInventario)
    {
        $this->__load();
        return parent::setOperacionInventario($operacionInventario);
    }

    public function getOperacionInventario()
    {
        $this->__load();
        return parent::getOperacionInventario();
    }

    public function setGeneraCartera($generaCartera)
    {
        $this->__load();
        return parent::setGeneraCartera($generaCartera);
    }

    public function getGeneraCartera()
    {
        $this->__load();
        return parent::getGeneraCartera();
    }

    public function setTipoAsientoCartera($tipoAsientoCartera)
    {
        $this->__load();
        return parent::setTipoAsientoCartera($tipoAsientoCartera);
    }

    public function getTipoAsientoCartera()
    {
        $this->__load();
        return parent::getTipoAsientoCartera();
    }

    public function setConsecutivo($consecutivo)
    {
        $this->__load();
        return parent::setConsecutivo($consecutivo);
    }

    public function getConsecutivo()
    {
        $this->__load();
        return parent::getConsecutivo();
    }

    public function setDocumentoTipo(\zikmont\FrontEndBundle\Entity\DocumentosTipo $documentoTipo)
    {
        $this->__load();
        return parent::setDocumentoTipo($documentoTipo);
    }

    public function getDocumentoTipo()
    {
        $this->__load();
        return parent::getDocumentoTipo();
    }

    public function setTipoValor($tipoValor)
    {
        $this->__load();
        return parent::setTipoValor($tipoValor);
    }

    public function getTipoValor()
    {
        $this->__load();
        return parent::getTipoValor();
    }

    public function setTipoCuentaIngreso($tipoCuentaIngreso)
    {
        $this->__load();
        return parent::setTipoCuentaIngreso($tipoCuentaIngreso);
    }

    public function getTipoCuentaIngreso()
    {
        $this->__load();
        return parent::getTipoCuentaIngreso();
    }

    public function setTipoCuentaIva($tipoCuentaIva)
    {
        $this->__load();
        return parent::setTipoCuentaIva($tipoCuentaIva);
    }

    public function getTipoCuentaIva()
    {
        $this->__load();
        return parent::getTipoCuentaIva();
    }

    public function setCuentaIva($cuentaIva)
    {
        $this->__load();
        return parent::setCuentaIva($cuentaIva);
    }

    public function getCuentaIva()
    {
        $this->__load();
        return parent::getCuentaIva();
    }

    public function setTipoCuentaRetencionFuente($tipoCuentaRetencionFuente)
    {
        $this->__load();
        return parent::setTipoCuentaRetencionFuente($tipoCuentaRetencionFuente);
    }

    public function getTipoCuentaRetencionFuente()
    {
        $this->__load();
        return parent::getTipoCuentaRetencionFuente();
    }

    public function setCuentaRetencionFuente($cuentaRetencionFuente)
    {
        $this->__load();
        return parent::setCuentaRetencionFuente($cuentaRetencionFuente);
    }

    public function getCuentaRetencionFuente()
    {
        $this->__load();
        return parent::getCuentaRetencionFuente();
    }

    public function setTipoCuentaTesoreria($tipoCuentaTesoreria)
    {
        $this->__load();
        return parent::setTipoCuentaTesoreria($tipoCuentaTesoreria);
    }

    public function getTipoCuentaTesoreria()
    {
        $this->__load();
        return parent::getTipoCuentaTesoreria();
    }

    public function setCuentaTesoreria($cuentaTesoreria)
    {
        $this->__load();
        return parent::setCuentaTesoreria($cuentaTesoreria);
    }

    public function getCuentaTesoreria()
    {
        $this->__load();
        return parent::getCuentaTesoreria();
    }

    public function addMovimientos(\zikmont\FrontEndBundle\Entity\Movimientos $movimientos)
    {
        $this->__load();
        return parent::addMovimientos($movimientos);
    }

    public function getMovimientos()
    {
        $this->__load();
        return parent::getMovimientos();
    }

    public function setGeneraTesoreria($generaTesoreria)
    {
        $this->__load();
        return parent::setGeneraTesoreria($generaTesoreria);
    }

    public function getGeneraTesoreria()
    {
        $this->__load();
        return parent::getGeneraTesoreria();
    }

    public function setTipoAsientoTesoreria($tipoAsientoTesoreria)
    {
        $this->__load();
        return parent::setTipoAsientoTesoreria($tipoAsientoTesoreria);
    }

    public function getTipoAsientoTesoreria()
    {
        $this->__load();
        return parent::getTipoAsientoTesoreria();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'codigoDocumentoPk', 'nombreDocumento', 'abreviatura', 'codigoDocumentoTipoFk', 'codigoComprobanteFk', 'columnaLote', 'columnaBodega', 'operacionInventario', 'generaCartera', 'tipoAsientoCartera', 'generaTesoreria', 'tipoAsientoTesoreria', 'tipoValor', 'consecutivo', 'tipoCuentaIngreso', 'tipoCuentaIva', 'cuentaIva', 'tipoCuentaRetencionFuente', 'cuentaRetencionFuente', 'tipoCuentaTesoreria', 'cuentaTesoreria', 'DocumentoTipo', 'movimientos');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}